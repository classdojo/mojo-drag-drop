// Generated by CoffeeScript 1.6.3
(function() {
  var DraggableDecorator, droppables, _,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  droppables = require("./collection");

  _ = require("underscore");

  DraggableDecorator = (function() {
    /*
    */

    function DraggableDecorator(view) {
      this.view = view;
      this._followMouse = __bind(this._followMouse, this);
      this._coords = __bind(this._coords, this);
      this._event = __bind(this._event, this);
      this._drag = __bind(this._drag, this);
      this._stopDrag = __bind(this._stopDrag, this);
      this._startDrag = __bind(this._startDrag, this);
      this._initListeners = __bind(this._initListeners, this);
      this.render = __bind(this.render, this);
      this.name = this.view.draggable;
      this.view.once("render", this.render);
    }

    /*
    */


    DraggableDecorator.prototype.render = function() {
      return this._initListeners();
    };

    /*
    */


    DraggableDecorator.prototype._initListeners = function() {
      var el;
      el = this.view.$();
      this.document = $(document);
      el.bind("selectstart", function() {
        return false;
      });
      el.bind("dragstart", function() {
        return false;
      });
      return el.bind("mousedown", this._startDrag);
    };

    /*
    */


    DraggableDecorator.prototype._startDrag = function(e) {
      var el;
      el = $(this.view.section.getChildNodes().filter(function(el) {
        return el.nodeType === 1;
      }));
      this.document.bind("mousemove", this._drag);
      this.document.one("mouseup", this._stopDrag);
      this._offset = {
        x: e.offsetX || el.width() / 2,
        y: e.offsetY || el.height() / 2
      };
      this.draggedItem = this.document.find("body").append("<div>" + el.html() + "</div>").children().last();
      this.draggedItem.css({
        "z-index": 99999999,
        "position": "absolute",
        "opacity": 0.8
      });
      this.draggedItem.transit({
        scale: 1.5
      });
      this._followMouse(e);
      e.stopPropagation();
      return false;
    };

    /*
    */


    DraggableDecorator.prototype._stopDrag = function(e) {
      droppables.drop(this.name, this._event(e));
      this.document.unbind("mousemove", this._mouseMoveListener);
      return this.draggedItem.remove();
    };

    /*
    */


    DraggableDecorator.prototype._drag = function(e) {
      droppables.drag(this.name, this._event(e));
      return this._followMouse(e);
    };

    /*
    */


    DraggableDecorator.prototype._event = function(e) {
      return {
        view: this.view,
        draggedItem: this.draggedItem,
        mouse: {
          x: e.pageX,
          y: e.pageY
        }
      };
    };

    /*
    */


    DraggableDecorator.prototype._coords = function(e) {
      return {
        left: e.pageX - this._offset.x,
        top: e.pageY - this._offset.y
      };
    };

    /*
    */


    DraggableDecorator.prototype._followMouse = function(e) {
      return this.draggedItem.css(this._coords(e));
    };

    /*
    */


    DraggableDecorator.priority = "display";

    DraggableDecorator.getOptions = function(view) {
      return view.draggable;
    };

    DraggableDecorator.decorate = function(view, options) {
      return new DraggableDecorator(view, options);
    };

    return DraggableDecorator;

  })();

  module.exports = DraggableDecorator;

}).call(this);
